./mk_clean

set -xe

# hack declare stdout (not sure if needed anymore?)
echo "int stdout;" > artifacts/m2min_v3.c
cat simple_support_js.c >> artifacts/m2min_v3.c
cat m2min_v3.js >> artifacts/m2min_v3.c
cat simple_support_js_m2.js >> artifacts/m2min_v3.c
cat simple_support_js_m2_prims.c >> artifacts/m2min_v3.c

pushd .

cd ../m2min_v2
./mk_cc_x86_min
cd artifacts
export PATH=$PWD:$PATH

popd

cat ./simple_asm_defs.M1 ./x86_defs.M1 ./libc-core.M1 m2min_v3.M1 > artifacts/m2min_v3-0.M1
M0 artifacts/m2min_v3-0.M1 artifacts/m2min_v3-0.hex2
cat ./ELF-i386.hex2 artifacts/m2min_v3-0.hex2 > artifacts/m2min_v3-0-0.hex2
hex2-0 artifacts/m2min_v3-0-0.hex2 artifacts/m2min_v3.exe


function compile() {
  $1 $2 $3.M1
  cat ./simple_asm_defs.M1 ./x86_defs.M1 ./libc-core.M1 $3.M1 > $3-0.M1
  M0 $3-0.M1 $3.hex2
  cat ELF-i386.hex2 $3.hex2 > $3-0.hex2
  hex2-0 $3-0.hex2 $3
}

compile ./artifacts/m2min_v3.exe artifacts/m2min_v3.c artifacts/boot0.exe
compile ./artifacts/boot0.exe artifacts/m2min_v3.c artifacts/boot1.exe
compile ./artifacts/boot1.exe artifacts/m2min_v3.c artifacts/boot2.exe

sha256sum -c sums_m2min_v3

diff -u -s ./m2min_v3.M1 artifacts/boot2.exe.M1
diff -u -s artifacts/m2min_v3.exe artifacts/boot2.exe

cat js_to_c/js_to_c_m2_support.c js_to_c/js_to_c_simple.c > artifacts/js_to_c_simple.c

compile ./artifacts/m2min_v3.exe artifacts/js_to_c_simple.c artifacts/js_to_c.exe

cat ../pnut_refactor/simple_support_js_m2.js ../pnut_refactor/pnut.js > artifacts/out.js
./artifacts/js_to_c.exe artifacts/out.js artifacts/out.c
cat ../pnut_refactor/simple_support_js_m2_prims.c ../pnut_refactor/support_common.c artifacts/out.c > artifacts/pnut_m2.c

compile ./artifacts/m2min_v3.exe artifacts/pnut_m2.c artifacts/pnut_js.exe

pushd .
cd ..
./mk_clean
popd

cp ./artifacts/pnut_js.exe ../artifacts/pnut-exe
cd ..
./mk_tcc-boot-mes
