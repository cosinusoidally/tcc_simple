Building netbsd-9 with live-bootstrap

grab internal_pass2_image from here
https://github.com/fosslinux/live-bootstrap/actions/runs/17082086787

If the github ci artifact has expired then either try a later build (note, later
versions might not work as I have not tested them) or rebuild it by using this
revision:

https://github.com/fosslinux/live-bootstrap/commit/14937efcb2cc99205299f92808fec1b331de543d

extract internal_pass2_image.zip then extract the tarball it contains.

Grab a git clone of https://github.com/NetBSD/src

and place it in the /src directory of the extracted tarball

git checkout netbsd-9

to change into the netbsd 9 branch.

Note I actually use a git archive:

git checkout netbsd-9
git archive -o ../src-9.tar.gz HEAD

and then extract src-9.tar.gz into /src but either way should work.

For completeness the commit I tested would have been:

https://github.com/NetBSD/src/commit/7c602ecbf36988123885fcf51b595c1af1b212bf

Apply the following patches:

--- a/src/usr.bin/xlint/lint1/scan.l
+++ b/src/usr.bin/xlint/lint1/scan.l
@@ -618,7 +618,8 @@
 
 	errno = 0;
 
-	uq = strtouq(cp, &eptr, base);
+/*	uq = strtouq(cp, &eptr, base); */
+	eptr=NULL;
 	if (eptr != cp + len)
 		LERROR("icon()");
 	if (errno != 0)


--- a/src/external/bsd/mdocml/dist/dba_read.c
--- b/src/external/bsd/mdocml/dist/dba_read.c
@@ -19,7 +19,11 @@
  * The interface is defined in "dba.h".
  * This file is seperate from dba.c because this also uses "dbm.h".
  */
-#include <regex.h>
+#ifdef HAVE_NBTOOL_CONFIG_H
+  #include "/usr/include/regex.h"
+#else
+  #include <regex.h>
+#endif
 #include <stdint.h>
 #include <stdlib.h>
 #include <stdio.h>


--- a/usr/include/bits/alltypes.h
+++ b/usr/include/bits/alltypes.h
@@ -1,3 +1,6 @@
+#ifndef daddr_t;
+typedef int daddr_t;
+#endif
 #define _REDIR_TIME64 1
 #define _Addr int
 #define _Int64 long long



In the / directory of target create a "go.sh" script:

```
#!/bin/sh

rm -rf /tmp/obj

cd /src
./build.sh -U -u -O /tmp/obj -m i386 -j4 tools release iso-image
```
(set -j to whatever you want)

bind mount the following:

mount --bind /dev dev
mount --bind /dev/shm dev/shm
mount --bind /proc proc

and then kick off the build with

chroot . /go.sh

You might need to:

setarch i686

before entering the chroot. I only tested on a i686 kernel (slackware 15, 
kernel 5.15.145-smp) it's possible autoconf might pick up the wrong arch on a
amd64 kernel.

See https://www.netbsd.org/docs/guide/en/chap-build.html for further docs
on build.sh

If all is successful you should get an iso output in:

/tmp/obj/distrib/i386/cdroms/installcd/NetBSD-9.4_STABLE-i386.iso

within the chroot. That ISO can install a full netbsd server (X11 is excluded,
though in theory is also easy to build with build.sh).
