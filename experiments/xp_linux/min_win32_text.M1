DEFINE addi8_esp, 83C4
DEFINE call E8
DEFINE leave C9
DEFINE movi8_[ebp+BYTE],eax 8945
DEFINE movi8_eax,[ebp+BYTE] 8B45
DEFINE movi8_ecx,[ebp+BYTE] 8B4D
DEFINE mov_eax, B8
DEFINE mov_ecx, B9
DEFINE mov_ebp,esp 89E5
DEFINE push_eax 50
DEFINE push_ecx 51
DEFINE push_ebp 55
DEFINE sub_esp, 81EC
DEFINE ret C3

# .text section
:.text
:args_base
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x8045800
  leave
  ret
:elf_base
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x8048000
  leave
  ret
:base_address
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x4000000
  leave
  ret
:file_descriptors
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %base_address
  mov_ecx, %0x200
  push_ecx
  mov_ecx, %0x20000
  push_ecx
  movi8_[ebp+BYTE],eax !-4
  call %add
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  leave
  ret
:sizeof_file_descriptor
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %8
  leave
  ret
:gfds
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  call %base_address
  mov_ecx, %0x01000010
  push_ecx
  push_eax
  call %add
  addi8_esp, !8
  leave
  ret
:sizeof_gfd
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %8
  leave
  ret
:filename_array
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  call %base_address
  mov_ecx, %0x200000
  push_ecx
  push_eax
  call %add
  addi8_esp, !8
  leave
  ret
:filename_size
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x400
  leave
  ret
:global_data
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  call %base_address
  mov_ecx, %0x10000
  push_ecx
  push_eax
  call %add
  addi8_esp, !8
  leave
  ret
:globals
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %global_data
  movi8_ecx,[ebp+BYTE] !8
  push_ecx
  mov_ecx, %4
  push_ecx
  movi8_[ebp+BYTE],eax !-4
  call %mul
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  leave
  ret
:regs_data
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:host_call_fn
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x4020024
  leave
  ret
:host_params
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0xA
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:host_stdout_addr
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x12
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:host_stdout
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  call %host_stdout_addr
  push_eax
  call %ri32
  addi8_esp, !4
  leave
  ret
:syscall_hook
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x13
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:reloc_entrypoint_ptr
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x4020050
  leave
  ret
:int2str_tmp
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x15
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:brk_ptr
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x28
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:next_fd
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x29
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:next_filenum
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x2A
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:file_addr
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x2B
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:command_file
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x2C
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:char_buf
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x2D
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:command_buffer
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x2E
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:dummy_global
  push_ebp
  mov_ebp,esp
  sub_esp, %0
  mov_eax, %0x82E
  push_eax
  call %globals
  addi8_esp, !4
  leave
  ret
:get_reg
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %regs_data
  mov_ecx, %4
  push_ecx
  movi8_ecx,[ebp+BYTE] !8
  push_ecx
  movi8_[ebp+BYTE],eax !-4
  call %mul
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  push_eax
  call %ri32
  addi8_esp, !4
  leave
  ret
:set_reg
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %regs_data
  mov_ecx, %0x4
  push_ecx
  movi8_ecx,[ebp+BYTE] !8
  push_ecx
  movi8_[ebp+BYTE],eax !-4
  call %mul
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  movi8_ecx,[ebp+BYTE] !12
  push_ecx
  push_eax
  call %wi32
  addi8_esp, !8
  leave
  ret
:set_param
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %host_params
  mov_ecx, %0x4
  push_ecx
  movi8_ecx,[ebp+BYTE] !8
  push_ecx
  movi8_[ebp+BYTE],eax !-4
  call %mul
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  movi8_ecx,[ebp+BYTE] !12
  push_ecx
  push_eax
  call %wi32
  addi8_esp, !8
  leave
  ret
:gfd_get_file_length
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %gfds
  movi8_[ebp+BYTE],eax !-4
  call %sizeof_gfd
  push_eax
  movi8_eax,[ebp+BYTE] !8
  push_eax
  call %mul
  addi8_esp, !8
  mov_ecx, %0x4
  push_ecx
  push_eax
  call %add
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  push_eax
  call %ri32
  addi8_esp, !4
  leave
  ret
:gfd_set_file_length
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %gfds
  movi8_[ebp+BYTE],eax !-4
  call %sizeof_gfd
  push_eax
  movi8_eax,[ebp+BYTE] !8
  push_eax
  call %mul
  addi8_esp, !8
  mov_ecx, %0x4
  push_ecx
  push_eax
  call %add
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  movi8_ecx,[ebp+BYTE] !12
  push_ecx
  push_eax
  call %wi32
  addi8_esp, !8
  leave
  ret
:gfd_get_file_addr
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %gfds
  movi8_[ebp+BYTE],eax !-4
  call %sizeof_gfd
  push_eax
  movi8_eax,[ebp+BYTE] !8
  push_eax
  call %mul
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  push_eax
  call %ri32
  addi8_esp, !4
  leave
  ret
:gfd_set_file_addr
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %gfds
  movi8_[ebp+BYTE],eax !-4
  call %sizeof_gfd
  push_eax
  movi8_eax,[ebp+BYTE] !8
  push_eax
  call %mul
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  movi8_ecx,[ebp+BYTE] !12
  push_ecx
  push_eax
  call %wi32
  addi8_esp, !8
  leave
  ret
:gfn_get_filename
  push_ebp
  mov_ebp,esp
  sub_esp, %4
  call %filename_array
  movi8_[ebp+BYTE],eax !-4
  call %filename_size
  push_eax
  movi8_eax,[ebp+BYTE] !8
  push_eax
  call %mul
  addi8_esp, !8
  push_eax
  movi8_eax,[ebp+BYTE] !-4
  push_eax
  call %add
  addi8_esp, !8
  leave
  ret
:fd_set_filenum
  push_ebp
  mov_ebp,esp
  sub_esp, %4
'E8' %file_descriptors
'8945 FC'
'E8' %sizeof_file_descriptor
'50'
'8B45 08'
'50'
'E8' %mul
'83C4 08'
'50'
'8B45 FC'
'50'
'E8' %add
'83C4 08'
'8B4D 0C'
'51'
'50'
'E8' %wi32
'83C4 08'
  leave
  ret
:fd_get_filenum
  push_ebp
  mov_ebp,esp
  sub_esp, %4
'E8' %file_descriptors
'8945 FC'
'E8' %sizeof_file_descriptor
'50'
'8B45 08'
'50'
'E8' %mul
'83C4 08'
'50'
'8B45 FC'
'50'
'E8' %add
'83C4 08'
'50'
'E8' %ri32
'83C4 04'
  leave
  ret
