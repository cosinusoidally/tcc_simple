./mk_clean

set -xe

pushd .
cd artifacts

mkdir deps
mkdir builds

cd deps

echo "int stdout;" > m2min_v3.c
cat ../../../m2min_v3/simple_support_js.c >> m2min_v3.c
cat ../../../m2min_v3/m2min_v3.js >> m2min_v3.c
cat ../../../m2min_v3/simple_support_js_m2.js >> m2min_v3.c
cat ../../../m2min_v3/simple_support_js_m2_prims.c >> m2min_v3.c

cat ../../cjsawk.js ../../support_libc.js ../../simple_support_js_m2_prims.c ../../support_m2.c > cjsawk_full.c

cat ../../m0.js ../../support_libc.js ../../simple_support_js_m2_prims.c ../../support_m2.c > m0_full.c

cat ../../hex2.js ../../support_libc.js ../../simple_support_js_m2_prims.c ../../support_m2.c > hex2_full.c

cat ../../../m2min_v3/js_to_c/js_to_c_m2_support.c ../../../m2min_v3/js_to_c/js_to_c_simple.c > js_to_c_simple_all.c


mkdir js_to_c
cd js_to_c
# compile cc_x86_min.exe ../js_to_c_simple_all.c js_to_c.exe

popd

cat ../pnut_refactor/simple_support_js_m2_prims.c ../pnut_refactor/support_common.c ../pnut_refactor/simple_support_js_m2.js ../pnut_refactor/pnut.js > artifacts/deps/pnut_js_m2.c

BLD_DIR=artifacts/builds/full_js
SRC_DIR=artifacts/deps

mkdir $BLD_DIR

echo "build cjsawk.exe.M1"
echo "fname=\"$SRC_DIR/cjsawk_full.c\";load(\"cjsawk_test.js\");" > $BLD_DIR/mk_cjsawk.js
js ../m2min_v3/node_compat_min.js $BLD_DIR/mk_cjsawk.js > $BLD_DIR/cjsawk.exe.M1

echo "append definitions to make cjsawk.exe-0.M1"

cat ../m2min_v3/simple_asm_defs.M1 ../m2min_v3/x86_defs.M1 ../m2min_v3/libc-core.M1 $BLD_DIR/cjsawk.exe.M1 > $BLD_DIR/cjsawk.exe-0.M1

echo "build cjsawk.exe.hex2"
echo "fname=\"$BLD_DIR/cjsawk.exe-0.M1\";load(\"m0_test.js\");" > $BLD_DIR/mk_m0.js
js ../m2min_v3/node_compat_min.js $BLD_DIR/mk_m0.js > $BLD_DIR/cjsawk.exe.hex2

echo "generate cjsawk.exe-0.hex2"
cat ../m2min_v3/ELF-i386.hex2 $BLD_DIR/cjsawk.exe.hex2 > $BLD_DIR/cjsawk.exe-0.hex2

echo "build cjsawk.exe"
echo "fname=\"$BLD_DIR/cjsawk.exe-0.hex2\";load(\"hex2_test.js\");" > $BLD_DIR/mk_hex2.js
js ../m2min_v3/node_compat_min.js $BLD_DIR/mk_hex2.js | base64 -d > $BLD_DIR/cjsawk.exe

chmod +x $BLD_DIR/cjsawk.exe

function compile_js {
  echo "build $2.M1"
  echo "fname=\"$1\";load(\"cjsawk_test.js\");" > $BLD_DIR/mk_cjsawk.js
  js ../m2min_v3/node_compat_min.js $BLD_DIR/mk_cjsawk.js > $2.M1

  echo "append definitions to make $2-0.M1"

  cat ../m2min_v3/simple_asm_defs.M1 ../m2min_v3/x86_defs.M1 ../m2min_v3/libc-core.M1 $2.M1 > $2-0.M1

  echo "build $2.hex2"
  echo "fname=\"$2-0.M1\";load(\"m0_test.js\");" > $BLD_DIR/mk_m0.js
  js ../m2min_v3/node_compat_min.js $BLD_DIR/mk_m0.js > $2.hex2

  echo "generate $2-0.hex2"
  cat ../m2min_v3/ELF-i386.hex2 $2.hex2 > $2-0.hex2

  echo "build $2"
  echo "fname=\"$2-0.hex2\";load(\"hex2_test.js\");" > $BLD_DIR/mk_hex2.js
  js ../m2min_v3/node_compat_min.js $BLD_DIR/mk_hex2.js | base64 -d > $2

  chmod +x $2
}

compile_js artifacts/deps/cjsawk_full.c $BLD_DIR/cjsawk2.exe
compile_js artifacts/deps/m0_full.c $BLD_DIR/m0.exe
compile_js artifacts/deps/hex2_full.c $BLD_DIR/hex2.exe

shasum $BLD_DIR/*exe | sort

echo "DONE js deps"
